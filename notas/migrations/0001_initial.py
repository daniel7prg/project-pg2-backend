# Generated by Django 5.1.1 on 2024-11-08 16:45

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cursos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_curso', models.CharField(max_length=50, unique=True)),
                ('estado_curso', models.BooleanField(default=True)),
                ('fecha_creacion_curso', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Grados',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_grado', models.CharField(max_length=50)),
                ('estado_grado', models.BooleanField(default=True)),
                ('fecha_creacion_grado', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Unidades',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_unidad', models.CharField(max_length=50, unique=True)),
                ('estado_unidad', models.BooleanField(default=True)),
                ('fecha_creacion_unidad', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=255, unique=True)),
                ('user_type', models.IntegerField(choices=[(1, 'Administrador'), (2, 'Secretario'), (3, 'Profesor')], default=3)),
                ('first_name', models.CharField(max_length=150, null=True)),
                ('last_name', models.CharField(max_length=150, null=True)),
                ('direccion', models.CharField(blank=True, max_length=100, null=True)),
                ('telefono', models.CharField(blank=True, max_length=10, null=True)),
                ('email', models.EmailField(blank=True, max_length=100, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('curso_id', models.ManyToManyField(blank=True, to='notas.cursos', verbose_name='ID curso Usuario')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
            },
        ),
        migrations.AddField(
            model_name='cursos',
            name='grado_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notas.grados', verbose_name='grado'),
        ),
        migrations.CreateModel(
            name='Secciones',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_seccion', models.CharField(max_length=10)),
                ('estado_seccion', models.BooleanField(default=True)),
                ('fecha_creacion_seccion', models.DateTimeField(auto_now_add=True)),
                ('grado_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notas.grados', verbose_name='seccion')),
            ],
        ),
        migrations.CreateModel(
            name='Alumnos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_alumno', models.CharField(max_length=50)),
                ('apellido_alumno', models.CharField(max_length=50)),
                ('estado_alumno', models.BooleanField(default=True)),
                ('fecha_creacion_alumno', models.DateTimeField(auto_now_add=True)),
                ('curso_id', models.ManyToManyField(to='notas.cursos', verbose_name='curso')),
                ('grado_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notas.grados', verbose_name='grado')),
                ('seccion_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notas.secciones', verbose_name='seccion')),
            ],
        ),
        migrations.CreateModel(
            name='Notas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valor_nota', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('valor_talento', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('estado_nota', models.BooleanField(default=True)),
                ('fecha_creacion_nota', models.DateTimeField(auto_now_add=True)),
                ('alumno_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notas.alumnos', verbose_name='alumno')),
                ('curso_id', models.ManyToManyField(to='notas.cursos', verbose_name='curso')),
                ('unidad_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notas.unidades', verbose_name='unidad')),
            ],
        ),
    ]
